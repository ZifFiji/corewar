name: continious-integration

on: 
  push:
    branches-ignore: [ga-ignore-*]
  pull_request:
    branches-ignore: [ga-ignore-*]

env:
  MIRROR_URL: "git@github.com:EpitechPromo2028/B-CPE-200-BDX-2-1-corewar-moana.piquet.git"
  EXECUTABLES: "corewar"

jobs:
  
  compare-keys:
    name: Compare CLI 
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker:latest

    steps:

      - name: Checkout GH repo
        uses: actions/checkout@v4

      - name: Compare repository 
        run: | 
          if [ "${{ github.repository }}" == "EpitechPromo2028/B-CPE-200-BDX-2-1-corewar-moana.piquet.git" ]; then
            echo "Same mirror repository"
            exit 1
          else
            echo "Different repository, continuing execution"
            exit 0
          fi

  check_coding_style:
    name: Run Coding Style Checker
    runs-on: ubuntu-latest
    needs: [compare-keys]
    container: 
      image: ghcr.io/epitech/coding-style-checker:latest

    steps:

      - name: Checkout GH repo
        uses: actions/checkout@v4

      - name: Run coding-style checker
        run: check.sh $(pwd) $(pwd)

      - name: Report banana result
        run: |
          NB_ERROR=$(cat coding-style-reports.log | wc -l)
          if [ $NB_ERROR -gt 0 ]; then
            echo "Coding style errors found:"
                while IFS= read -r line; do
                  file=$(echo $line | cut -d':' -f1)
                  line_number=$(echo $line | cut -d':' -f2)
                  name=$(echo $line | cut -d':' -f3)
                  message=$(echo $line | cut -d':' -f4-)
                  echo "::error title=$name coding style error,file=$file,line=$line_number::$message"
                done < coding-style-reports.log
                exit 1
              fi
              exit 0

  check_program_compilation:
    name: Run Makefile
    runs-on: ubuntu-latest
    needs: [check_coding_style]
    container: epitechcontent/epitest-docker:latest

    steps:

      - name: Checkout GH Repo
        uses: actions/checkout@v4

      - name: Compile repository
        run: make
        timeout-minutes: 2

      - name: Clean repository
        run: make clean

      - name: Check binary presence
        run: |
          IFS=',' read -ra EXE_ARRAY <<< "$EXECUTABLES"
          found=false
          for exe in "${EXE_ARRAY[@]}"; do
            if [ -f "./$exe" ]; then
              found=true
              if [ ! -x "./$exe" ]; then
                echo "::error file=$exe, title=Execution Error::Binary $exe can't be executed"
                exit 1
              fi
            fi
          done
          if ! $found; then
            echo "::error title=Binary Error::No executables found"
            exit 1
          fi
          exit 0

  run_tests:
    runs-on: ubuntu-latest
    name: Run Unit & Integration Tests
    container: epitechcontent/epitest-docker:latest
    needs: [check_program_compilation, check_coding_style]

    steps:

      - name: Checkout GH Repo
        uses: actions/checkout@v4

      - name: Compile tests binaries
        run: make unit_tests 

      - name: Run unit tests
        run: ./unit_tests

  push_to_mirror:
    name: Mirror repository
    runs-on: ubuntu-latest
    needs: [run_tests, check_program_compilation, check_coding_style]

    steps:
      - name: Checkout GH Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Push changes to mirror repository
        uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url: ${{ env.MIRROR_URL }}
          ssh_private_key: ${{ secrets.GIT_SSH_PRIVATE_KEY }}

